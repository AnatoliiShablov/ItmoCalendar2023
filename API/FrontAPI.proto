syntax = "proto3";

package front_api;

message User {
  int64 id = 1;
}

message UserMessage {
  User user = 1;
  string text = 2;
}

message Status {
  message Ok {
    string text = 1;
  }

  message Error {
    string text = 1;
  }

  oneof State {
    Ok    ok = 1;
    Error error = 2;
  }
}



message ShowAllRequest {
  User user = 1;
}

message ShowAllResponse {
  Status status = 1;
}

message StartNewRequest {
  User user = 1;
}

message StartNewResponse {
  Status status = 1;
}

message StartEditRequest {
  User user = 1;
}

message StartEditResponse {
  Status status = 1;
}

message RemoveRequest {
  User  user = 1;
  int64 id = 2;
}

message RemoveResponse {
  Status status = 1;
}

message SetLanguageRequest {
  enum Language {
    Language_NaL = 0;
    Language_RU = 1;
    Language_EN = 2;
  }

  User     user = 1;
  Language language = 2;
}

message SetLanguageResponse {
  Status status = 1;
}

message SetTimeZoneRequest {
  message Minutes {
    int32 value = 1;
  }

  User     user = 1;
  Minutes  utcOffset = 2;
}

message SetTimeZoneResponse {
  Status status = 1;
}

message AddNextArgumentRequest {
  User   user = 1;
  string text = 2;
}

message AddNextArgumentResponse {
  Status status = 1;
}

message SubscribeRequest {
}

message SubscribeResponse {
  User   user = 1;
  string text = 2;
}

service Calendar {
  // Information
  rpc ShowAll (ShowAllRequest) returns (ShowAllResponse) {}

  // Operations
  rpc StartNew    (StartNewRequest)    returns (StartNewResponse)    {}
  // rpc StartEdit   (StartEditRequest)   returns (StartEditResponse)   {}
  rpc Remove (RemoveRequest) returns (RemoveResponse) {}

  // Settings
  //    rpc SetLanguage (SetLanguageRequest) returns (SetLanguageResponse) {}
  rpc SetTimeZone (SetTimeZoneRequest) returns (SetTimeZoneResponse) {}

  // Arguments
  rpc AddNextArgument (AddNextArgumentRequest) returns (AddNextArgumentResponse) {}
}

service Notifier {
  // Notifications
  rpc Subscribe (SubscribeRequest) returns (stream SubscribeResponse) {}
}
